{"version":3,"sources":["store.js","Screen.js","Colors.js","App.js","index.js"],"names":["MAX_INDEX","INIT_INDEX","Math","random","round","params","URLSearchParams","window","location","search","c","get","p","colors","atob","split","Array","map","_","wheelIndex","parseInt","useWheel","create","config","set","wheelOpen","palette","niceColorPalette","setIndex","index","paletteIndex","produce","draft","setPalette","setWheelIndex","increaseWheelIndex","debounce","state","decreaseWheelIndex","toggleWheel","api","args","s","btoa","join","history","replaceState","toString","Screen","opacity","props","ref","useRef","useState","hovered","setHovered","nodes","useGLTF","scale","toggle","localOpen","setLocalOpen","color","springOpacityRef","springOpacity","useSpring","useEffect","current","start","delay","onRest","document","body","style","cursor","useFrame","newScale","lerp","x","handleClick","useCallback","e","stopPropagation","visible","onClick","position","dispose","rotation","PI","geometry","Slice001","renderOrder","meshPhysicalMaterial","metalness","clearcoat","roughness","transparent","mesh","onPointerOver","onPointerOut","castShadow","Slice","transmission","i","position-x","position-z","meshStandardMaterial","preload","Cylinder","material","Color","convertSRGBToLinear","object","attach","Model","materials","screenNode","fill","rotation-x","rotation-y","receiveShadow","Cube","black","side","BackSide","PalettesWheel","springRotY","springPosX","_weel","useMemo","_wheelIndex","NUM","abs","alpha","easeInOutExpo","pow","a","pop","el","sin","cos","positions","rotY","posX","posZ","rotX","useChain","group","pos","Floor","useTexture","floor","normal","Reflector","resolution","mirror","mixBlur","mixStrength","blur","minDepthThreshold","maxDepthThreshold","depthScale","Material","roughnessMap","normalMap","normalScale","envMapIntensity","App","isMobile","test","navigator","userAgent","tempWheel","useCopyClipboard","href","successDuration","isCopied","setCopied","bind","useGesture","onWheel","xy","y","scroll","onDrag","axis","dragDelay","height","concurrent","shadowMap","pixelRatio","camera","fov","far","zoom","fallback","intensity","penumbra","angle","distance","Loader","date","year","link1","link2","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3b374e24.chunk.js","sourcesContent":["import create from 'zustand'\nimport niceColorPalette from 'nice-color-palettes/1000'\nimport produce from 'immer'\nimport debounce from 'lodash.debounce'\n\nexport const MAX_INDEX = 900\nexport const INIT_INDEX = MAX_INDEX / 2 + (Math.random() > 0.5 ? -1 : 1) * Math.round(200 * Math.random())\nexport const NUM = 8\n\nconst persist = (config) => (set, get, api) =>\n  config(\n    (args) => {\n      set(args)\n      const { wheelOpen, colors, wheelIndex } = get()\n      const s = new URLSearchParams({\n        c: btoa(colors.join('')),\n        p: wheelIndex\n      })\n      if (!wheelOpen) {\n        window.history.replaceState('', '', `?${s.toString()}`)\n      }\n    },\n    get,\n    api\n  )\n\nconst params = new URLSearchParams(window.location.search)\n\nconst c = params.get('c')\nconst p = params.get('p') || INIT_INDEX\n\nconst colors = c\n  ? atob(c).split('')\n  : [...new Array(36)].map((_) => {\n      return Math.round(Math.random() * 4)\n    })\n\nconst wheelIndex = p <= MAX_INDEX ? parseInt(p, 10) : INIT_INDEX\n\nexport const useWheel = create(\n  persist((set, get) => ({\n    wheelIndex,\n    wheelOpen: false,\n    palette: niceColorPalette[wheelIndex],\n    colors,\n\n    setIndex: (index, paletteIndex) =>\n      set({\n        colors: produce(get().colors, (draft) => {\n          draft[index] = paletteIndex\n        })\n      }),\n\n    setPalette: (palette) => set({ palette }),\n    setWheelIndex: (wheelIndex) => set({ wheelIndex }),\n    increaseWheelIndex: debounce(() => set((state) => ({ wheelIndex: state.wheelIndex + 1 })), 5),\n    decreaseWheelIndex: debounce(() => set((state) => ({ wheelIndex: state.wheelIndex - 1 })), 5),\n    toggleWheel: () => set((state) => ({ wheelOpen: !state.wheelOpen }))\n  }))\n)\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useEffect, useCallback, useRef, useState } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { useSpring, a } from '@react-spring/three'\nimport { useFrame } from 'react-three-fiber'\nimport lerp from 'lerp'\nimport niceColorPalette from 'nice-color-palettes/1000'\nimport { useWheel } from './store'\n\nexport default function Screen({ wheelIndex, opacity, ...props }) {\n  const ref = useRef()\n  const [hovered, setHovered] = useState(false)\n  const { nodes } = useGLTF('/Screen.gltf')\n  const scale = opacity === 1 ? 1.4 : 1\n  const setWheelIndex = useWheel((s) => s.setWheelIndex)\n  const toggle = useWheel((s) => s.toggleWheel)\n  const wheelOpen = useWheel((s) => s.wheelOpen)\n  const setPalette = useWheel((s) => s.setPalette)\n  const [localOpen, setLocalOpen] = useState(wheelOpen)\n  const color = niceColorPalette[wheelIndex]\n\n  const springOpacityRef = useRef()\n  const { springOpacity } = useSpring({\n    ref: springOpacityRef,\n    springOpacity: opacity === 1 ? 1 : 0\n  })\n\n  useEffect(() => {\n    if (wheelOpen) {\n      if (localOpen) {\n        springOpacityRef.current.start({\n          springOpacity: opacity\n        })\n      } else {\n        springOpacityRef.current.start({\n          springOpacity: opacity,\n          delay: 1000,\n          onRest: () => setLocalOpen(true)\n        })\n      }\n    } else {\n      springOpacityRef.current.start({\n        springOpacity: opacity === 1 ? 1 : 0,\n        onRest: () => setLocalOpen(false)\n      })\n    }\n    if (opacity === 1) {\n      setPalette(color)\n    }\n  }, [localOpen, setLocalOpen, wheelOpen, opacity, setPalette, color])\n  useEffect(() => (document.body.style.cursor = hovered ? 'pointer' : 'auto'), [hovered])\n\n  useFrame(() => {\n    const newScale = lerp(ref.current.scale.x, scale, 0.1)\n    ref.current.scale.set(newScale, newScale, newScale)\n  })\n\n  const handleClick = useCallback(\n    (e) => {\n      e.stopPropagation()\n      if (wheelIndex) {\n        if (wheelOpen) {\n          setWheelIndex(wheelIndex)\n          toggle()\n        } else {\n          if (opacity === 1) {\n            toggle()\n          }\n        }\n      }\n    },\n    [setWheelIndex, wheelOpen, opacity, wheelIndex, toggle]\n  )\n\n  return (\n    <group visible={opacity > 0.01} onClick={handleClick} ref={ref} scale={[scale, scale, scale]} {...props}>\n      <group position={[1, -0.51, 1]} scale={[1.27, 1.27, 1.27]} dispose={null} rotation={[0, Math.PI / 2, 0]}>\n        <mesh geometry={nodes.Slice001.geometry} position={[0.97, 0.39, -0.91]} renderOrder={0} scale={[15, 1, 1]}>\n          <a.meshPhysicalMaterial color=\"black\" metalness={1} clearcoat={1} roughness={1} transparent opacity={springOpacity} />\n        </mesh>\n        <a.mesh\n          onPointerOver={(e) => void (e.stopPropagation(), setHovered(true))}\n          onPointerOut={() => setHovered(false)}\n          castShadow\n          geometry={nodes.Slice.geometry}\n          renderOrder={1}>\n          <a.meshPhysicalMaterial\n            transmission={1}\n            metalness={0}\n            clearcoat={1}\n            roughness={0}\n            transparent\n            color=\"#222\"\n            opacity={springOpacity}\n          />\n        </a.mesh>\n      </group>\n      {color\n        ? color.map((c, i) => (\n            <mesh key={`0${i}`} position-x={(i - 2.5) / 3.8} position-z={-0.24} renderOrder={0}>\n              <boxBufferGeometry args={[0.265, 0.8, 0.02]} />\n              <a.meshStandardMaterial color={c} transparent opacity={springOpacity} metalness={0.7} roughness={0.6} />\n            </mesh>\n          ))\n        : null}\n    </group>\n  )\n}\n\nuseGLTF.preload('/Screen.gltf')\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { useWheel } from './store'\nimport Screen from './Screen'\nimport { BackSide, Color } from 'three'\nimport { useFrame } from 'react-three-fiber'\n\nfunction Cylinder({ i, material, metalness, roughness, ...props }) {\n  const ref = useRef()\n  const [hovered, setHovered] = useState(false)\n  const paletteIndex = useWheel((state) => state.colors[i])\n  const setIndex = useWheel((state) => state.setIndex)\n  const handleClick = useCallback(\n    (e) => {\n      e.stopPropagation()\n      setIndex(i, (paletteIndex + 1) % 5)\n    },\n    [paletteIndex, i, setIndex]\n  )\n\n  const palette = useWheel((s) => s.palette)\n  const [color] = useState(() => new Color())\n  useEffect(() => (document.body.style.cursor = hovered ? 'pointer' : 'auto'), [hovered])\n\n  useFrame(() => material.color.lerp(color.set(palette[paletteIndex]).convertSRGBToLinear(), 0.1))\n\n  return (\n    <mesh\n      onPointerOver={(e) => void (e.stopPropagation(), setHovered(true))}\n      onPointerOut={() => setHovered(false)}\n      ref={ref}\n      onClick={handleClick}\n      {...props}>\n      <primitive object={material} attach=\"material\" metalness={metalness} roughness={roughness} />\n    </mesh>\n  )\n}\n\nexport default function Model(props) {\n  const { nodes, materials } = useGLTF('/colors.glb')\n  const { nodes: screenNode } = useGLTF('/Screen.gltf')\n\n  return (\n    <group {...props} dispose={null}>\n      <group position={[-0.54, 1.08, 1.69]}>\n        {new Array(36).fill().map((_, index) => (\n          <Cylinder\n            key={`0${index}`}\n            i={index}\n            rotation-x={Math.PI / 2}\n            rotation-y={-Math.PI / 2}\n            geometry={nodes[`Cylinder${index === 0 ? '' : index < 10 ? `00${index}` : `0${index}`}`].geometry}\n            material={materials[`Material.${index === 0 ? '037' : index + 1 < 10 ? `00${index + 1}` : `0${index + 1}`}`]}\n            metalness={0.85}\n            roughness={0.5}\n          />\n        ))}\n      </group>\n      <Screen />\n      <mesh receiveShadow geometry={nodes.Cube.geometry} position={[0, 1, 0]} rotation-x={Math.PI / 2}>\n        <primitive object={materials.black} attach=\"material\" metalness={0.55} roughness={0.45} color=\"#c9ced5\" />\n      </mesh>\n      <mesh geometry={screenNode.Slice.geometry} position={[1.79, 1.789, 0.01]} rotation={[0, 0, 3.14]} scale={[0.999, 0.999, 0.999]}>\n        <meshPhysicalMaterial color=\"#111\" roughness={1} side={BackSide} />\n      </mesh>\n    </group>\n  )\n}\n\nuseGLTF.preload('/Color.gltf')\n","import React, { Suspense, useCallback, useMemo, useRef } from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport { useSpring, a, useChain } from '@react-spring/three'\nimport { useGesture } from 'react-use-gesture'\nimport { Loader, useTexture, Reflector } from '@react-three/drei'\nimport useCopyClipboard from 'react-use-clipboard'\nimport { Footer } from '@pmndrs/branding'\nimport { MAX_INDEX, NUM, useWheel } from './store'\nimport Model from './Colors'\nimport Screen from './Screen'\n\nfunction easeInOutExpo(x) {\n  return x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? Math.pow(2, 20 * x - 10) / 2 : (2 - Math.pow(2, -20 * x + 10)) / 2\n}\n\nfunction PalettesWheel() {\n  const springRotY = useRef()\n  const springPosX = useRef()\n  const wheelOpen = useWheel((s) => s.wheelOpen)\n  const wheelIndex = useWheel((s) => s.wheelIndex)\n  const _weel = (2 * Math.PI * wheelIndex) / NUM\n  const [positions, colors, alpha] = useMemo(() => {\n    const _wheelIndex = wheelIndex - NUM / 2\n    let colors = new Array(NUM)\n      .fill()\n      .map((_, i) => Math.abs((_wheelIndex + i > 0 ? _wheelIndex + i : MAX_INDEX + _wheelIndex + i) % MAX_INDEX))\n    let alpha = new Array(NUM).fill().map((_, i) => easeInOutExpo(1 - (2 * Math.abs(i - NUM / 2)) / NUM))\n    for (let i = 0; i < Math.abs(wheelIndex % NUM); i += 1) {\n      const a = alpha.pop()\n      const el = colors.pop()\n      colors = [el, ...colors]\n      alpha = [a, ...alpha]\n    }\n\n    const positions = new Array(NUM)\n      .fill()\n      .map((_, index) => [0, -2 * Math.sin((2 * Math.PI * index) / NUM), -2 * Math.cos((2 * Math.PI * index) / NUM)])\n    return [positions, colors, alpha]\n  }, [wheelIndex])\n\n  const { rotY } = useSpring({\n    ref: springRotY,\n    rotY: wheelOpen ? Math.PI / 4 : Math.PI / 2\n  })\n  const { posX, posZ } = useSpring({\n    ref: springPosX,\n    posX: wheelOpen ? 2 : -3,\n    posZ: wheelOpen ? -4 : -1.9\n  })\n  const { rotX } = useSpring({\n    rotX: _weel\n  })\n  useChain(!wheelOpen ? [springRotY, springPosX] : [springPosX, springRotY], [0, 1])\n\n  return (\n    <a.group position-x={posX} position-z={posZ} rotation-y={rotY}>\n      <a.group rotation-x={rotX}>\n        {positions.map((pos, index) => (\n          <Screen\n            key={`0${index}`}\n            position={pos}\n            wheelIndex={colors[index]}\n            rotation-x={-(2 * Math.PI * index) / NUM}\n            opacity={alpha[index]}\n          />\n        ))}\n      </a.group>\n    </a.group>\n  )\n}\n\nfunction Floor() {\n  const [floor, normal] = useTexture(['/roughness_floor.jpeg', '/normal_floor.jpeg'])\n  return (\n    <Reflector\n      receiveShadow\n      resolution={512}\n      args={[30, 30]}\n      mirror={0.5}\n      mixBlur={8}\n      mixStrength={5}\n      rotation={[-Math.PI / 2, 0, 0]}\n      position={[3, -2.53, -1]}\n      blur={[1000, 100]}\n      minDepthThreshold={0.5}\n      maxDepthThreshold={2}\n      depthScale={2}>\n      {(Material, props) => (\n        <Material\n          color=\"#333\"\n          metalness={0}\n          roughnessMap={floor}\n          normalMap={normal}\n          normalScale={[0.1, 0.1]}\n          envMapIntensity={0}\n          {...props}\n        />\n      )}\n    </Reflector>\n  )\n}\n\nexport default function App() {\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent)\n  const tempWheel = useRef(0)\n  const wheelOpen = useWheel((s) => s.wheelOpen)\n  const increaseWheelIndex = useWheel((s) => s.increaseWheelIndex)\n  const decreaseWheelIndex = useWheel((s) => s.decreaseWheelIndex)\n  const [isCopied, setCopied] = useCopyClipboard(window.location.href, {\n    successDuration: 2000\n  })\n\n  const handleClick = useCallback(\n    (e) => {\n      e.stopPropagation()\n      setCopied()\n    },\n    [setCopied]\n  )\n  const bind = useGesture(\n    {\n      onWheel: ({ xy: [, y] }) => {\n        const scroll = parseInt(y / 50, 10)\n        if (scroll > tempWheel.current) {\n          decreaseWheelIndex()\n          tempWheel.current = scroll\n        }\n        if (scroll < tempWheel.current) {\n          increaseWheelIndex()\n          tempWheel.current = scroll\n        }\n      },\n      ...(isMobile && {\n        onDrag: ({ xy: [, y] }) => {\n          const scroll = parseInt(y / 50, 10)\n          if (scroll > tempWheel.current) {\n            increaseWheelIndex()\n            tempWheel.current = scroll\n          }\n          if (scroll < tempWheel.current) {\n            decreaseWheelIndex()\n            tempWheel.current = scroll\n          }\n        }\n      })\n    },\n    { axis: 'y', dragDelay: 2000 }\n  )\n\n  return (\n    <div {...(wheelOpen && bind())} style={{ height: '100%' }}>\n      <Canvas concurrent shadowMap pixelRatio={[1, 1.5]} camera={{ fov: 20, far: 100, position: [0, -10, 50], zoom: isMobile ? 1 : 1.5 }}>\n        <color attach=\"background\" args={['#101010']} />\n        <fog attach=\"fog\" args={['#101010', 50, 60]} />\n        <group rotation={[Math.PI / 8, -Math.PI / 3.2, 0]} position-x={0}>\n          <Suspense fallback={null}>\n            <PalettesWheel />\n            <Model position={[-2.5, -2.5, 0]} scale={[1.8, 1.8, 1.8]} />\n            <Floor />\n          </Suspense>\n        </group>\n        <ambientLight intensity={4} />\n        <spotLight castShadow intensity={2} position={[10, 0, 10]} penumbra={1} angle={0.3} distance={30} />\n        <directionalLight position={[-5, 10, -10]} intensity={0} />\n      </Canvas>\n      <Loader />\n      <Footer\n        date=\"1. February\"\n        year=\"2021\"\n        link1={<a onClick={handleClick}>Share your composition</a>}\n        link2={isCopied && <div>Link copied in clipboard!</div>}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}